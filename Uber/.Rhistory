col_types = cols(TV = col_number(), Radio = col_number(),
`Social Media` = col_number(), Influencer = col_number(),
Sales = col_number()))
dummy2 <- Dummy_Data_HSS[c(1:100),]
library(ggplot2)
ggplot(data = dummy2, mapping = aes(x = TV, y = Sales)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = dummy2, mapping = aes(x = TV, y = Sales)) + geom_boxplot(colour = "green")
ggplot(data = dummy2, mapping = aes(x = TV, y = Sales)) + geom_line(colour = "red")
ggplot(data = dummy2, mapping = aes(x = TV,)) + geom_line(aes(y = Sales), colour = "green") + geom_line(aes(y = Radio), colour = "yellow")
library(readr)
Rain <- read_csv("Rainfall_data.csv",
cols (Year = col_number(), Month = col_number(),
Day = col_number(),`Specific Humidity` = col_number(), `Relative Humidity` = col_number(),
Temperature = col_number(), Precipitation = col_number()))
library(readr)
Rain <- read_csv("Rainfall_data.csv",
cols (Year = col_number(), Month = col_number(),
Day = col_number(),`Specific Humidity` = col_number(), `Relative Humidity` = col_number(),
Temperature = col_number(), Precipitation = col_number()))
dummy2 <- Rain[c(1:100),]
library(ggplot2)
ggplot(data = dummy2, mapping = aes(x = Month, y = Temperature)) + geom_line(colour = "green") + geom_point(colour = "red")
library(readr)
Rain <- read_csv("Rainfall_data.csv",
cols (Year = col_number(), Month = col_number(),
Day = col_number(),`Specific Humidity` = col_number(), `Relative Humidity` = col_number(),
Temperature = col_number(), Precipitation = col_number()))
dummy2 <- Rain[c(1:100),]
library(ggplot2)
ggplot(data = dummy2, mapping = aes(x = Month, y = Temperature)) + geom_line(colour = "green") + geom_point(colour = "red")
library(readr)
Rain <- read_csv("Rainfall_data.csv",
cols (Year = col_number(), Month = col_number(),
Day = col_number(),`Specific Humidity` = col_number(), `Relative Humidity` = col_number(),
Temperature = col_number(), Precipitation = col_number()))
dummy2 <- Rain[c(1:100),]
library(ggplot2)
ggplot(data = dummy2, mapping = aes(x = Month, y = Temperature)) + geom_line(colour = "green") + geom_point(colour = "red")
View(dummy2)
add <- function(x, y)
{
return(x + y)
}
add <- function(x, y)
{
return(x + y)
}
sub <- function(x, y)
{
return(x - y)
}
mul <- function (x, y)
{
return(x * y)
}
div <-function(x, y)
{
return(x / y)
}
print("select operation")
print("1 for add")
print("2 for substraction")
print("3 for multiply")
print("4 for Division")
op = as.integer(readline(prompt = "Enter choice"))
n1 = as.integer(readline(prompt = "Enter number"))
n1 = as.integer(readline(prompt = "Enter number"))
n1 = as.integer(readline(prompt = "Enter number"))
n2 = as.integer(readline(prompt = "Enter another number"))
opr <- switch(op,"+", "-", "*", "/")
res <-switch(op, add(n1, n2), sub(n1, n2), mul(n1, n2), div(n1, n2))
print(paste(n1, opr, n2, "=", res))
library(readr)
literacy_rate <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv")
library(readr)
literacy_rate <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv")
View(literacy_rate)
View(literacy_rate)
plot(literacy_rate)
library(readr)
List_of_Indian_states_and_union_territories_by_literacy_rate <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv")
plot(literacy_rate)
library(readr)
new <- read_csv("R_code/dataset/indian population new.csv")
plot(new)
library(readr)
new <- read_csv("R_code/dataset/StudentsPerformance.csv")
plot(new)
View(new)
library(readr)
new <- read_csv("R_code/dataset/College_placement/placement_companies.csv")
plot(new)
View(new)
View(new)
View(List_of_Indian_states_and_union_territories_by_literacy_rate)
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv")
plot(data)
View(data)
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv")
plot(data)
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Average_11 = col_number(), Male_11 = col_number(), female_11 = col_number(),
Average_17 = col_number(), Male_17 = col_number(), female_17 = col_number()))
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Average_11 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Average_17 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
View(data)
data1 <- data[c(2:37),]
library(ggplot2)
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Average_11)) + geom_line(colour = "green") + geom_point(colour = "red")
library(readr)
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Avg11 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Avg17 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
View(data)
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Avg2011 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Avg2017 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
data1 <- data[c(2:37),]
library(ggplot2)
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Average_11)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2017)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = data1, mapping = aes(x = Male_11, y = Avg2011)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = data1, mapping = aes(x = Male_11, y = Male_17)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = data1, mapping = aes(x = Male_11, y = Female_11)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = data1, mapping = aes(x = Male_11, y = Female_11)) + geom_line(colour = "green") + geom_point(colour = "red") + geom_point(colour = "black")
ggplot(data = data1, mapping = aes(x = `State or UT`, y = Avg2011)) + geom_line(colour = "green") + geom_point(colour = "red")
ggplot(data = dummy2, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "green")
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "green")
ggplot(data = data1, mapping = aes(x = `State or UT`,)) + geom_line(aes(y = Male_17), colour = "green") + geom_line(aes(y = Female_17), colour = "yellow")
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_line(aes(y = Male_17), colour = "green") + geom_line(aes(y = Female_17), colour = "yellow")
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Female_17), colour = "yellow")
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Female_17), colour = "black")
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_histogram(aes(y = Male_17), colour = "red") + geom_histogram(aes(y = Female_17), colour = "black")
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_histogram(aes(y = Male_17), colour = "red")
hist(data1)
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Female_17), colour = "black")
setwd()
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Avg2011 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Avg2017 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
#Census 2011 and  NSO survey (2017)
data1 <- data[c(2:37),]
library(ggplot2)
#male of 2017 vs female of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Female_17), colour = "black")
#male of 2011 vs female of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Female_17), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#male of 2011 vs female of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_11), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#male of 2017 vs male of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Male_11), colour = "black")
#female of 2017 vs female of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Female_17), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#average of 2017 vs average of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Avg2017), colour = "red") + geom_point(aes(y = Avg2011), colour = "black")
#box plot for Average of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "black")
#box plot for average of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2017)) + geom_boxplot(colour = "red")
#comparing avg of 2017 vs 2011 using boxplot
my2cols <- c("red", "black")
p <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
p <- ggplot2(data1, aes(x =`Sl no` ,y = Avg2017 ))
library(ggpubr)
p <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
p <- ggplot(data = data1, mapping = aes(x =`Sl no` ,y = Avg2017 ))
p <- ggplot(data = data1, mapping = aes(x =`Sl no` ,y = Avg2017 ))
library(ggplot2)
p <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Avg2011 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Avg2017 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
#Census 2011 and  NSO survey (2017) source of dataset
data1 <- data[c(2:37),]
library(ggplot2)
#male of 2017 vs female of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Female_17), colour = "black")
#comparing avg of 2017 vs 2011 using boxplot
my2cols <- c("red", "black")
p <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
bxp <- p + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
bxp
#comparing avg of 2017 vs 2011 using boxplot
my2cols <- c("red", "black")
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
p2 <- ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "black")
bxp <- p1 + p2
bxp
#comparing avg of 2017 vs 2011 using boxplot
my2cols <- c("red", "black")
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
bxp <- p + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
bxp
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
bxp <- p1 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
bxp
#comparing avg of 2017 vs 2011 using boxplot
my2cols <- c("red", "black")
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
p2 <- ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011))
bxp <- p1 + p2 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 ))
p2 <- ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011))
bxp <- p1 + p2 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
bxp <- p1 + p2 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
plot_grid(p1, p2)
plot_grid(p1, p2, lables = "AUTO")
library(cowplot)
library(cowplot)
bxp <- p1 + p2 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
plot_grid(p1, p2, lables = "AUTO")
#comparing avg of 2017 vs 2011 using boxplot
#my2cols <- c("red", "black")
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 )) + geom_boxplot(colour = "red")
p2 <- ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "black")
library(cowplot)
bxp <- p1 + p2 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
plot_grid(p1, p2, lables = "AUTO")
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Avg2011 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Avg2017 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
#Census 2011 and  NSO survey (2017) source of dataset SL no is the stae number
data1 <- data[c(2:37),]
library(ggplot2)
#male of 2017 vs female of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Female_17), colour = "black")
#male of 2017 vs female of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_11), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#male of 2017 vs male of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Male_11), colour = "black")
#female of 2017 vs female of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Female_17), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#average of 2017 vs average of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Avg2017), colour = "red") + geom_point(aes(y = Avg2011), colour = "black")
#box plot for Average of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "black")
#box plot for average of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2017)) + geom_boxplot(colour = "red")
#comparing avg of 2017 vs 2011 using boxplot
#my2cols <- c("red", "black")
p1 <- ggplot(data1, aes(x =`Sl no` ,y = Avg2017 )) + geom_boxplot(colour = "red")
p2 <- ggplot(data = data1, mapping = aes(x = `Sl no`, y = Avg2011)) + geom_boxplot(colour = "black")
library(cowplot)
bxp <- p1 + p2 + geom_boxplot(aes(color = `Sl no`)) + scale_color_manual(values = my2cols)
plot_grid(p1, p2, lables = "AUTO")
#male of 2017 vs female of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_11), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#male of 2017 vs male of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Male_11), colour = "black")
library(readr)
data <- read_csv("R_code/dataset/List of Indian states and union territories by literacy rate.csv",
col_types = cols(`Sl no` = col_number(), `State or UT` = col_character(),
Avg2011 = col_number(), Male_11 = col_number(), Female_11 = col_number(),
Avg2017 = col_number(), Male_17 = col_number(), Female_17 = col_number()))
#Census 2011 and  NSO survey (2017) source of dataset SL no is the stae number
data1 <- data[c(2:37),]
library(ggplot2)
#male of 2017 vs female of 2017
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_11), colour = "red") + geom_point(aes(y = Female_11), colour = "black")
#male of 2017 vs male of 2011
ggplot(data = data1, mapping = aes(x = `Sl no`,)) + geom_point(aes(y = Male_17), colour = "red") + geom_point(aes(y = Male_11), colour = "black")
install.packages(c("bit", "cli", "isoband", "vctrs"))
library(lubridate)
setwd('C:/Users/kings/OneDrive/Documents/R_code/dataset')
library(readr)
ice <- read_csv("icecreamsales.csv",
col_types = cols(Temperature = col_number(),
Sales = col_number()))
res <- corrplot(corr(ice))
setwd('C:/Users/kings/OneDrive/Documents/R_code/dataset')
library(readr)
library(corrplot)
ice <- read_csv("icecreamsales.csv",
col_types = cols(Temperature = col_number(),
Sales = col_number()))
res <- corrplot(corr(ice))
#predictive
x <- c (580, 7813, 28266, 59287, 75700, 87820, 95314,
126214, 218843, 471497, 936851, 1508725, 2072113)
library(lubridate)
library(forecast)
png(file = "forecastSalRevenue.png")
mts <- ts(x, start = decimal_date(ymd("2020-01-22")),
frequency = 365.25/7)
png(file = "forecastSalRevenue.png")
mts <- ts(x, start = decimal_date(ymd("2020-01-22")),frequency = 365.25/7)
#predictive
x <- c (580, 7813, 28266, 59287, 75700, 87820, 95314,
126214, 218843, 471497, 936851, 1508725, 2072113)
library(lubridate)
library(forecast)
png(file = "forecastSalRevenue.png")
mts <- ts(x, start = decimal_date(ymd("2020-01-22")),
frequency = 365.25/7)
#forecasting model using arima model
fir <- auto.arima(mts)
forecast(fir, 5)
plot(forecast(fir,5,xlab = "weekly data of sales", ylab ="total Revenue", main = "sales vs Revenue", col.main ="darkgreen"))
setwd('C:/Users/kings/OneDrive/Documents/R_code/output')
#predictive
x <- c (580, 7813, 28266, 59287, 75700, 87820, 95314,
126214, 218843, 471497, 936851, 1508725, 2072113)
library(lubridate)
library(forecast)
png(file = "forecastSalRevenue.png")
mts <- ts(x, start = decimal_date(ymd("2020-01-22")),
frequency = 365.25/7)
#forecasting model using arima model
fir <- auto.arima(mts)
forecast(fir, 5)
plot(forecast(fir,5,xlab = "weekly data of sales", ylab ="total Revenue", main = "sales vs Revenue", col.main ="darkgreen"))
dev.off()
#****************************************************************correlation*******************************************************
setwd('C:/Users/kings/OneDrive/Documents/R_code/dataset')
#correlation
library(readr)
library(corrplot)
ice <- read_csv("icecreamsales.csv",
col_types = cols(Temperature = col_number(),
Sales = col_number()))
res <- corrplot(corr(ice))
ice <- read_csv("icecreamsales.csv",
col_types = cols(Temperature = col_number(),
Sales = col_number()))
res <- corrplot(cor(ice))
gc()
gc()
gc()
#uber
setwd('C:/Users/kings/OneDrive/Documents/R_code/dataset/uber')
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
may_data <- read.csv("uber-raw-data-may14.csv")
jun_data <- read.csv("uber-raw-data-jun14.csv")
jul_data <- read.csv("uber-raw-data-jul14.csv")
aug_data <- read.csv("uber-raw-data-aug14.csv")
sep_data <- read.csv("uber-raw-data-sep14.csv")
data_2014 <- rbind(apr_data,may_data, jun_data, jul_data, aug_data, sep_data)
data_2014$Date.Time <- as.POSIXct(data_2014$Date.Time, format = "%m/%d/%Y %H:%M:%S")
data_2014$Time <- format(as.POSIXct(data_2014$Date.Time, format = "%m/%d/%Y %H:%M:%S"), format="%H:%M:%S")
data_2014$Date.Time <- ymd_hms(data_2014$Date.Time)
data_2014$day <- factor(day(data_2014$Date.Time))
data_2014$month <- factor(month(data_2014$Date.Time, label = TRUE))
data_2014$year <- factor(year(data_2014$Date.Time))
data_2014$dayofweek <- factor(wday(data_2014$Date.Time, label = TRUE))
data_2014$hour <- factor(hour(hms(data_2014$Time)))
data_2014$minute <- factor(minute(hms(data_2014$Time)))
data_2014$second <- factor(second(hms(data_2014$Time)))
hour_data <- data_2014 %>%
group_by(hour) %>%
dplyr::summarize(Total = n())
datatable(hour_data)
ggplot(hour_data, aes(hour, Total)) +
geom_bar( stat = "identity", fill = "steelblue", color = "red") +
ggtitle("Trips Every Hour") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
month_hour <- data_2014 %>%
group_by(month, hour) %>%
dplyr::summarize(Total = n())
ggplot(month_hour, aes(hour, Total, fill = month)) +
geom_bar( stat = "identity") +
ggtitle("Trips by Hour and Month") +
scale_y_continuous(labels = comma)
day_group <- data_2014 %>%
group_by(day) %>%
dplyr::summarize(Total = n())
datatable(day_group)
ggplot(day_group, aes(day, Total)) +
geom_bar( stat = "identity", fill = "steelblue") +
ggtitle("Trips Every Day") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
day_month_group <- data_2014 %>%
group_by(month, day) %>%
dplyr::summarize(Total = n())
ggplot(day_month_group, aes(day, Total, fill = month)) +
geom_bar( stat = "identity") +
ggtitle("Trips by Day and Month") +
scale_y_continuous(labels = comma) +
scale_fill_manual(values = colors)
month_group <- data_2014 %>%
group_by(month) %>%
dplyr::summarize(Total = n())
datatable(month_group)
ggplot(month_group , aes(month, Total, fill = month)) +
geom_bar( stat = "identity") +
ggtitle("Trips by Month") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma) +
scale_fill_manual(values = colors)
month_weekday <- data_2014 %>%
group_by(month, dayofweek) %>%
dplyr::summarize(Total = n())
ggplot(month_weekday, aes(month, Total, fill = dayofweek)) +
geom_bar( stat = "identity", position = "dodge") +
ggtitle("Trips by Day and Month") +
scale_y_continuous(labels = comma) +
scale_fill_manual(values = colors)
ggplot(data_2014, aes(Base)) +
geom_bar(fill = "darkred") +
scale_y_continuous(labels = comma) +
ggtitle("Trips by Bases")
ggplot(data_2014, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
scale_y_continuous(labels = comma) +
ggtitle("Trips by Bases and Month") +
scale_fill_manual(values = colors)
ggplot(data_2014, aes(Base, fill = dayofweek)) +
geom_bar(position = "dodge") +
scale_y_continuous(labels = comma) +
ggtitle("Trips by Bases and DayofWeek") +
scale_fill_manual(values = colors)
day_and_hour <- data_2014 %>%
group_by(day, hour) %>%
dplyr::summarize(Total = n())
datatable(day_and_hour)
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(color = "white") +
ggtitle("Heat Map by Hour and Day")
ggplot(day_month_group, aes(day, month, fill = Total)) +
geom_tile(color = "white") +
ggtitle("Heat Map by Month and Day")
ggplot(month_weekday, aes(dayofweek, month, fill = Total)) +
geom_tile(color = "white") +
ggtitle("Heat Map by Month and Day of Week")
month_base <-  data_2014 %>%
group_by(Base, month) %>%
dplyr::summarize(Total = n())
day0fweek_bases <-  data_2014 %>%
group_by(Base, dayofweek) %>%
dplyr::summarize(Total = n())
ggplot(month_base, aes(Base, month, fill = Total)) +
geom_tile(color = "white") +
ggtitle("Heat Map by Month and Bases")
ggplot(day0fweek_bases, aes(Base, dayofweek, fill = Total)) +
geom_tile(color = "white") +
ggtitle("Heat Map by Bases and Day of Week")
min_lat <- 40.5774
max_lat <- 40.9176
min_long <- -74.15
max_long <- -73.7004
ggplot(data_2014, aes(x=Lon, y=Lat)) +
geom_point(size=1, color = "blue") +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme_map() +
ggtitle("NYC MAP BASED ON UBER RIDES DURING 2014 (APR-SEP)")
#uber
setwd('C:/Users/kings/OneDrive/Documents/R_code/dataset/uber')
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
may_data <- read.csv("uber-raw-data-may14.csv")
jun_data <- read.csv("uber-raw-data-jun14.csv")
jul_data <- read.csv("uber-raw-data-jul14.csv")
aug_data <- read.csv("uber-raw-data-aug14.csv")
sep_data <- read.csv("uber-raw-data-sep14.csv")
data_2014 <- rbind(apr_data,may_data, jun_data, jul_data, aug_data, sep_data)
data_2014$Date.Time <- as.POSIXct(data_2014$Date.Time, format = "%m/%d/%Y %H:%M:%S")
data_2014$Time <- format(as.POSIXct(data_2014$Date.Time, format = "%m/%d/%Y %H:%M:%S"), format="%H:%M:%S")
data_2014$Date.Time <- ymd_hms(data_2014$Date.Time)
data_2014$day <- factor(day(data_2014$Date.Time))
data_2014$month <- factor(month(data_2014$Date.Time, label = TRUE))
data_2014$year <- factor(year(data_2014$Date.Time))
data_2014$dayofweek <- factor(wday(data_2014$Date.Time, label = TRUE))
data_2014$hour <- factor(hour(hms(data_2014$Time)))
data_2014$minute <- factor(minute(hms(data_2014$Time)))
data_2014$second <- factor(second(hms(data_2014$Time)))
hour_data <- data_2014 %>%
group_by(hour) %>%
dplyr::summarize(Total = n())
datatable(hour_data)
ggplot(hour_data, aes(hour, Total)) +
geom_bar( stat = "identity", fill = "steelblue", color = "red") +
ggtitle("Trips Every Hour") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
month_hour <- data_2014 %>%
group_by(month, hour) %>%
dplyr::summarize(Total = n())
